module TruncatedCuboctahedron.Data
  where
import qualified Data.IntMap.Strict           as IM
import           Graphics.Rendering.OpenGL.GL (GLfloat, Vertex3 (..))

vertices :: IM.IntMap (Vertex3 GLfloat)
vertices =
  IM.fromList
  [ ( 0 , Vertex3 (-1.0) (-x) (-y) )
  , ( 1 , Vertex3 (-1.0) (-x) y )
  , ( 2 , Vertex3 (-1.0) x (-y) )
  , ( 3 , Vertex3 (-1.0) x y )
  , ( 4 , Vertex3 1.0 (-x) (-y) )
  , ( 5 , Vertex3 1.0 (-x) y )
  , ( 6 , Vertex3 1.0 x (-y) )
  , ( 7 , Vertex3 1.0 x y )
  , ( 8 , Vertex3 (-x) (-1.0) (-y) )
  , ( 9 , Vertex3 (-x) (-1.0) y )
  , ( 10 , Vertex3 x (-1.0) (-y) )
  , ( 11 , Vertex3 x (-1.0) y )
  , ( 12 , Vertex3 (-x) 1.0 (-y) )
  , ( 13 , Vertex3 (-x) 1.0 y )
  , ( 14 , Vertex3 x 1.0 (-y) )
  , ( 15 , Vertex3 x 1.0 y )
  , ( 16 , Vertex3 (-x) (-y) (-1.0) )
  , ( 17 , Vertex3 (-x) y (-1.0) )
  , ( 18 , Vertex3 x (-y) (-1.0) )
  , ( 19 , Vertex3 x y (-1.0) )
  , ( 20 , Vertex3 (-x) (-y) 1.0 )
  , ( 21 , Vertex3 (-x) y 1.0 )
  , ( 22 , Vertex3 x (-y) 1.0 )
  , ( 23 , Vertex3 x y 1.0 )
  , ( 24 , Vertex3 (-1.0) (-y) (-x) )
  , ( 25 , Vertex3 (-1.0) y (-x) )
  , ( 26 , Vertex3 (-1.0) (-y) x )
  , ( 27 , Vertex3 (-1.0) y x )
  , ( 28 , Vertex3 1.0 (-y) (-x) )
  , ( 29 , Vertex3 1.0 y (-x) )
  , ( 30 , Vertex3 1.0 (-y) x )
  , ( 31 , Vertex3 1.0 y x )
  , ( 32 , Vertex3 (-y) (-1.0) (-x) )
  , ( 33 , Vertex3 y (-1.0) (-x) )
  , ( 34 , Vertex3 (-y) (-1.0) x )
  , ( 35 , Vertex3 y (-1.0) x )
  , ( 36 , Vertex3 (-y) 1.0 (-x) )
  , ( 37 , Vertex3 y 1.0 (-x) )
  , ( 38 , Vertex3 (-y) 1.0 x )
  , ( 39 , Vertex3 y 1.0 x )
  , ( 40 , Vertex3 (-y) (-x) (-1.0) )
  , ( 41 , Vertex3 y (-x) (-1.0) )
  , ( 42 , Vertex3 (-y) x (-1.0) )
  , ( 43 , Vertex3 y x (-1.0) )
  , ( 44 , Vertex3 (-y) (-x) 1.0 )
  , ( 45 , Vertex3 y (-x) 1.0 )
  , ( 46 , Vertex3 (-y) x 1.0 )
  , ( 47 , Vertex3 y x 1.0 )
  ]
  where
    x = 1 + sqrt 2
    y = 1 + 2 * sqrt 2

polygonsIdxs :: [[Int]]
polygonsIdxs =
  [ [ 17 , 21 , 46 , 42 ]
  , [ 2 , 12 , 36 , 42 , 17 , 25 ]
  , [ 16 , 20 , 44 , 40 ]
  , [ 10 , 14 , 37 , 33 ]
  , [ 0 , 8 , 32 , 40 , 16 , 24 ]
  , [ 8 , 12 , 36 , 32 ]
  , [ 18 , 22 , 45 , 41 ]
  , [ 3 , 13 , 38 , 46 , 21 , 27 ]
  , [ 1 , 5 , 11 , 15 , 7 , 3 , 13 , 9 ]
  , [ 17 , 21 , 27 , 31 , 23 , 19 , 29 , 25 ]
  , [ 3 , 7 , 31 , 27 ]
  , [ 32 , 36 , 42 , 46 , 38 , 34 , 44 , 40 ]
  , [ 1 , 9 , 34 , 44 , 20 , 26 ]
  , [ 9 , 13 , 38 , 34 ]
  , [ 7 , 15 , 39 , 47 , 23 , 31 ]
  , [ 11 , 15 , 39 , 35 ]
  , [ 33 , 37 , 43 , 47 , 39 , 35 , 45 , 41 ]
  , [ 19 , 23 , 47 , 43 ]
  , [ 4 , 10 , 33 , 41 , 18 , 28 ]
  , [ 0 , 4 , 28 , 24 ]
  , [ 16 , 20 , 26 , 30 , 22 , 18 , 28 , 24 ]
  , [ 5 , 11 , 35 , 45 , 22 , 30 ]
  , [ 1 , 5 , 30 , 26 ]
  , [ 0 , 4 , 10 , 14 , 6 , 2 , 12 , 8 ]
  , [ 6 , 14 , 37 , 43 , 19 , 29 ]
  , [ 2 , 6 , 29 , 25 ]
  ]

edgesIdxs :: [(Int,Int)]
edgesIdxs =
  [ ( 0 , 4 )
  , ( 0 , 8 )
  , ( 0 , 24 )
  , ( 1 , 5 )
  , ( 1 , 9 )
  , ( 1 , 26 )
  , ( 2 , 6 )
  , ( 2 , 12 )
  , ( 2 , 25 )
  , ( 3 , 7 )
  , ( 3 , 13 )
  , ( 3 , 27 )
  , ( 4 , 10 )
  , ( 4 , 28 )
  , ( 5 , 11 )
  , ( 5 , 30 )
  , ( 6 , 14 )
  , ( 6 , 29 )
  , ( 7 , 15 )
  , ( 7 , 31 )
  , ( 8 , 12 )
  , ( 8 , 32 )
  , ( 9 , 13 )
  , ( 9 , 34 )
  , ( 10 , 14 )
  , ( 10 , 33 )
  , ( 11 , 15 )
  , ( 11 , 35 )
  , ( 12 , 36 )
  , ( 13 , 38 )
  , ( 14 , 37 )
  , ( 15 , 39 )
  , ( 16 , 20 )
  , ( 16 , 24 )
  , ( 16 , 40 )
  , ( 17 , 21 )
  , ( 17 , 25 )
  , ( 17 , 42 )
  , ( 18 , 22 )
  , ( 18 , 28 )
  , ( 18 , 41 )
  , ( 19 , 23 )
  , ( 19 , 29 )
  , ( 19 , 43 )
  , ( 20 , 26 )
  , ( 20 , 44 )
  , ( 21 , 27 )
  , ( 21 , 46 )
  , ( 22 , 30 )
  , ( 22 , 45 )
  , ( 23 , 31 )
  , ( 23 , 47 )
  , ( 24 , 28 )
  , ( 25 , 29 )
  , ( 26 , 30 )
  , ( 27 , 31 )
  , ( 32 , 36 )
  , ( 32 , 40 )
  , ( 33 , 37 )
  , ( 33 , 41 )
  , ( 34 , 38 )
  , ( 34 , 44 )
  , ( 35 , 39 )
  , ( 35 , 45 )
  , ( 36 , 42 )
  , ( 37 , 43 )
  , ( 38 , 46 )
  , ( 39 , 47 )
  , ( 40 , 44 )
  , ( 41 , 45 )
  , ( 42 , 46 )
  , ( 43 , 47 )
  ]


polygons :: [[Vertex3 GLfloat]]
polygons = map (\idxs -> [vertices IM.! i | i <- idxs]) polygonsIdxs

edges :: [(Vertex3 GLfloat, Vertex3 GLfloat)]
edges = map (\(i,j) -> (vertices IM.! i, vertices IM.! j)) edgesIdxs
