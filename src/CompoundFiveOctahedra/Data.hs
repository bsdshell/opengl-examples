module CompoundFiveOctahedra.Data
  where
import           Data.Tuple.Extra             (both)
import           Graphics.Rendering.OpenGL.GL (GLfloat, Vertex3 (..))
import           Data.List                    (nub)
import           Data.List.Split              (chunksOf)

vertices :: [Vertex3 GLfloat]
vertices =
  map toVertex3 [ [-0.000022, -1.000000, 0.000593],
                  [1.000000, -0.000022, -0.000027],
                  [-0.000027, -0.000593, -1.000000],
                  [0.000027, 0.000593, 1.000000],
                  [-1.000000, 0.000022, 0.000027],
                  [0.000022, 1.000000, -0.000593],
                  [0.809330, 0.308983, 0.499514],
                  [0.499601, -0.809329, -0.308847],
                  [0.308842, 0.499517, -0.809382],
                  [-0.308842, -0.499517, 0.809382],
                  [-0.809330, -0.308983, -0.499514],
                  [-0.499601, 0.809329, 0.308847],
                  [0.809290, -0.309018, -0.499557],
                  [-0.499653, -0.809306, -0.308822],
                  [-0.308863, 0.499532, -0.809365],
                  [0.308863, -0.499532, 0.809365],
                  [-0.809290, 0.309018, 0.499557],
                  [0.499653, 0.809306, 0.308822],
                  [0.809312, -0.308730, 0.499700],
                  [-0.499824, -0.808828, 0.309795],
                  [0.308528, -0.500483, -0.808905],
                  [-0.308528, 0.500483, 0.808905],
                  [-0.809312, 0.308730, -0.499700],
                  [0.499824, 0.808828, -0.309795],
                  [0.809308, 0.308679, -0.499737],
                  [0.499796, -0.808847, 0.309793],
                  [-0.308585, -0.500485, -0.808883],
                  [0.308585, 0.500485, 0.808883],
                  [-0.809308, -0.308679, 0.499737],
                  [-0.499796, 0.808847, -0.309793]
                ]
  where
    toVertex3 x = Vertex3 (x!!0) (x!!1) (x!!2)

trianglesIdxs :: [[[Int]]]
trianglesIdxs = chunksOf 8 [[1,0,2],
                            [1,3,0],
                            [4,0,3],
                            [2,0,4],
                            [2,5,1],
                            [1,5,3],
                            [3,5,4],
                            [4,5,2],
                            [6,7,8],
                            [6,9,7],
                            [10,7,9],
                            [8,7,10],
                            [8,11,6],
                            [6,11,9],
                            [9,11,10],
                            [10,11,8],
                            [12,13,14],
                            [12,15,13],
                            [16,13,15],
                            [14,13,16],
                            [14,17,12],
                            [12,17,15],
                            [15,17,16],
                            [16,17,14],
                            [18,19,20],
                            [18,21,19],
                            [22,19,21],
                            [20,19,22],
                            [20,23,18],
                            [18,23,21],
                            [21,23,22],
                            [22,23,20],
                            [24,25,26],
                            [24,27,25],
                            [28,25,27],
                            [26,25,28],
                            [26,29,24],
                            [24,29,27],
                            [27,29,28],
                            [28,29,26]
                          ]

triangles :: [[[Vertex3 GLfloat]]]
triangles = map (map (\idxs -> [vertices !! i | i <- idxs])) trianglesIdxs


edgesIdxs :: [[(Int,Int)]]
edgesIdxs = chunksOf 12 [ (1,0),
                          (0,2),
                          (2,1),
                          (1,3),
                          (3,0),
                          (4,0),
                          (3,4),
                          (4,2),
                          (2,5),
                          (5,1),
                          (5,3),
                          (5,4),
                          (6,7),
                          (7,8),
                          (8,6),
                          (6,9),
                          (9,7),
                          (10,7),
                          (9,10),
                          (10,8),
                          (8,11),
                          (11,6),
                          (11,9),
                          (11,10),
                          (12,13),
                          (13,14),
                          (14,12),
                          (12,15),
                          (15,13),
                          (16,13),
                          (15,16),
                          (16,14),
                          (14,17),
                          (17,12),
                          (17,15),
                          (17,16),
                          (18,19),
                          (19,20),
                          (20,18),
                          (18,21),
                          (21,19),
                          (22,19),
                          (21,22),
                          (22,20),
                          (20,23),
                          (23,18),
                          (23,21),
                          (23,22),
                          (24,25),
                          (25,26),
                          (26,24),
                          (24,27),
                          (27,25),
                          (28,25),
                          (27,28),
                          (28,26),
                          (26,29),
                          (29,24),
                          (29,27),
                          (29,28)
                        ]

edges :: [[(Vertex3 GLfloat, Vertex3 GLfloat)]]
edges = map (map (both (vertices !!))) edgesIdxs

vertices' :: [[Vertex3 GLfloat]]
vertices' =
  map (nub . concatMap (\idxs -> [vertices !! i | i <- idxs])) trianglesIdxs
